<?php
/**
 * Created by PhpStorm.
 * User: recca0120
 * Date: 2018/11/10
 * Time: 3:33 PM
 */

use App\BudgetService;
use PHPUnit\Framework\TestCase;
use Carbon\Carbon;
use App\IBudgetRepository;

class ï¼¢udgetServiceTest extends TestCase
{
    private $budgetService;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->budgetService = new BudgetService(new BudgetRepository());
    }

    public function test_should_return_zero_when_budget_is_zero()
    {
        $this->budgetShouldBe(0, '2018-04-01', '2018-04-30');
    }

    public function test_should_get_amount_when_budget_isset()
    {
        $this->budgetShouldBe(310, '2018-05-01', '2018-05-31');
    }

    public function test_should_get_total_amount_in_same_month()
    {
        $this->budgetShouldBe(100, '2018-05-01', '2018-05-10');
    }

    public function test_should_get_total_amount_in_two_months()
    {
        $this->budgetShouldBe(30, '2018-05-31', '2018-06-01');
    }

    public function test_should_get_total_amount_in_three_months()
    {
        $this->budgetShouldBe(510, '2018-04-10', '2018-06-10');
    }

    public function budgetShouldBe($expected, $startDate, $endDate)
    {
        $this->assertEquals($expected, $this->budgetService->totalAmount(Carbon::parse($startDate), Carbon::parse($endDate)));
    }
}

class BudgetRepository implements IBudgetRepository
{
    public function getAll()
    {
        return [
            '2018-04' => 0,
            '2018-05' => 310,
            '2018-06' => 600,
        ];
    }
}